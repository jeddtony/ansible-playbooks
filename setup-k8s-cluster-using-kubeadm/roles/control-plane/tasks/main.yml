---
# Initialize Kubernetes Control Plane
- name: Create kubeadm config file
  copy:
    dest: /root/kubeadm-config.yaml
    content: |
      apiVersion: kubeadm.k8s.io/v1beta4
      kind: InitConfiguration
      localAPIEndpoint:
        advertiseAddress: "{{ control_plane_ip }}"
        bindPort: 6443
      nodeRegistration:
        name: "{{ ansible_hostname }}"
      ---
      apiVersion: kubeadm.k8s.io/v1beta4
      kind: ClusterConfiguration
      kubernetesVersion: "{{ kubernetes_version }}.0"
      controlPlaneEndpoint: "{{ control_plane_ip }}:6443"
      apiServer:
        extraArgs:
          - name: "enable-admission-plugins"
            value: "NodeRestriction"
          - name: "audit-log-path"
            value: "/var/log/kubernetes/audit.log"
      controllerManager:
        extraArgs:
          - name: "node-cidr-mask-size"
            value: "24"
      scheduler:
        extraArgs:
          - name: "leader-elect"
            value: "true"
      networking:
        podSubnet: "{{ pod_cidr }}"
        serviceSubnet: "{{ service_cidr }}"
        dnsDomain: "cluster.local"
      ---
      apiVersion: kubelet.config.k8s.io/v1beta1
      kind: KubeletConfiguration
      cgroupDriver: "systemd"
      syncFrequency: "1m"
      ---
      apiVersion: kubeproxy.config.k8s.io/v1alpha1
      kind: KubeProxyConfiguration
      mode: "ipvs"
      conntrack:
        maxPerCore: 32768
        min: 131072
        tcpCloseWaitTimeout: "1h"
        tcpEstablishedTimeout: "24h"

- name: Initialize Kubernetes cluster
  command: kubeadm init --config=/root/kubeadm-config.yaml
  register: kubeadm_init
  changed_when: "'Your Kubernetes control-plane has initialized successfully' in kubeadm_init.stdout"

- name: Create .kube directory
  file:
    path: /root/.kube
    state: directory
    mode: '0755'

- name: Copy admin.conf to .kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    owner: root
    group: root
    mode: '0644'

- name: Create .kube directory for ubuntu user
  file:
    path: /home/ubuntu/.kube
    state: directory
    mode: '0755'
    owner: ubuntu
    group: ubuntu

- name: Copy admin.conf to ubuntu user's .kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    remote_src: yes
    owner: ubuntu
    group: ubuntu
    mode: '0600'

- name: Get join command
  shell: kubeadm token create --print-join-command
  register: join_command

- name: Save join command to file
  copy:
    content: "{{ join_command.stdout }}"
    dest: /tmp/join_command
    mode: '0755'

- name: Fetch join command to local
  fetch:
    src: /tmp/join_command
    dest: /tmp/join_command
    flat: yes

- name: Start kubelet after cluster initialization
  systemd:
    name: kubelet
    state: started

- name: Wait for kubelet to be ready
  shell: kubectl get nodes
  register: kubelet_ready
  retries: 10
  delay: 10
  until: kubelet_ready.rc == 0 